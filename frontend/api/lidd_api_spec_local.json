{
  "swagger": "2.0",
  "info": {
      "description": "Linked Metadata API for the Linked Interdisciplinary Data Discover Tool (LIDD)",
      "version": "0.1",
      "title": "LIDD API",
      "contact": {
          "email": "maturner01@gmail.com"
      }
  },
  "schemes": ["http"],
  "tags": [
      {
          "name": "metadata",
          "description": "General search for linked metadata from a variety of repositories"
      },
      {
          "name": "geospatial",
          "description": "Query records geospatially; find geospatially similar datasets"
      }
  ],
  "host": "localhost:4000",
  "basePath": "/api",
  "paths": {
      "/metadata": {
          "get": {
              "tags": [
                "metadata"
              ],
              "summary": "list of all metadata records",
              "produces": ["application/json"],
              "responses": {
                "200": {
                    "description": "Success"
                }
              }
          }
      },
      "/metadata/{id}": {
          "get": {
              "tags": [
                  "metadata"
              ],
              "summary": "single JSON linked metadata record",
              "description": "To test this out, take one of the 'id' fields from /metadata above",
              "produces": ["application/json"],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "ID of linked metadata record to return",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                "200": {
                    "description": "Success"
                }
              }
          }
      },
      "/metadata/{id}/raw": {
          "get": {
              "tags": [
                  "metadata"
              ],
              "summary": "single original (native format) XML metadata record",
              "description": "To test this out, take one of the 'id' fields from /metadata above",
              "produces": ["application/json"],
              "parameters": [
                  {
                      "name": "id",
                      "in": "path",
                      "description": "ID of raw original record to return",
                      "required": true,
                      "type": "string"
                  }
              ],
              "responses": {
                "200": {
                    "description": "Success"
                }
              }
          }
      },

      "/metadata/geo/nearby": {
          "get": {
            "tags": [
                "geospatial"
            ],
            "summary": "user-constrained list of records within given (required) lat and lon",
            "produces": ["application/json"],
            "parameters": [
              {
                  "name": "lat",
                  "in": "query",
                  "description": "latitude of center point",
                  "required": true,
                  "type": "integer",
                  "default": "40.439722"
              },
              {
                  "name": "lon",
                  "in": "query",
                  "description": "longitude of center point",
                  "requried": true,
                  "type": "integer",
                  "default": "-79.976389"
              },
              {
                  "name": "limit",
                  "in": "query",
                  "description": "take only this many closest records",
                  "required": false,
                  "type": "integer",
                  "default": 100
              }
            ]
        }
      },

      "/metadata/geo/within": {
          "get": {
            "tags": [
                "geospatial"
            ],
            "summary": "user-constrained list of records within given (required) lat and lon",
            "produces": ["application/json"],
            "parameters": [
              {
                  "name": "north",
                  "in": "query",
                  "description": "latitude of center point",
                  "required": true,
                  "type": "integer",
                  "default": "39.9709"
              },
              {
                  "name": "south",
                  "in": "query",
                  "description": "longitude of center point",
                  "requried": true,
                  "type": "integer",
                  "default": "35.1593"
              }, 
              {
                  "name": "east",
                  "in": "query",
                  "description": "latitude of center point",
                  "required": true,
                  "type": "integer",
                  "default": "-74.4594"
              },
              {
                  "name": "west",
                  "in": "query",
                  "description": "longitude of center point",
                  "requried": true,
                  "type": "integer",
                  "default": "-78.2623"
              },
              {
                  "name": "limit",
                  "in": "query",
                  "description": "take only this many closest records",
                  "required": false,
                  "type": "integer",
                  "default": 100
              }
            ]
        }
      },

      "/metadata/{id}/geo/nearby": {
          "get": {
              "tags": [
                "geospatial" 
              ],
              "summary": "user-constrained list of records for data products collected nearby",
              "produces": ["application/json"],
              "parameters": [
                {
                    "name": "id",
                    "in": "url",
                    "description": "id of the record of interest",
                    "required": true,
                    "type": "string"   
                },
                {
                    "name": "limit",
                    "in": "query",
                    "description": "Limit the number of results to this many closest records",
                    "required": false,
                    "type": "integer"
                },
                {
                    "name": "maxDistance",
                    "in": "query",
                    "description": "Maximum distance in away a nearby record may be",
                    "required": false,
                    "type": "integer"
                }
              ],
              "responses":
              {
                  "404": {
                      "description": "Invalid ID, record not found"
                  }
              }
          }
      },

      "/metadata/search": {
          "get": {
              "tags": [
                "metadata"
              ],
              "summary": "Faceted search of all linked, normalized metadata records",
              "description": "Search results are generated by the parameters below and then can be filtered by metadata standard by using booleans. See below for more details.",
              "produces": ["application/xml"],
              "parameters": [
                {
                    "name": "title",
                    "in": "query",
                    "description": "Full-text search of titles",
                    "required": false,
                    "type": "string"
                },
                {
                    "name": "eml",
                    "in": "query",
                    "description": "JavaScript boolean ('true'/'false') of whether or not to include metadata in the Ecological Markup Language standard",
                    "required": "false",
                    "type": "boolean",
                    "default": "true"
                },
                {
                    "name": "ddi",
                    "in": "query",
                    "description": "JavaScript boolean ('true'/'false') of whether or not to include metadata in the Data Documentation Initiative standard",
                    "required": "false",
                    "type": "boolean",
                    "default": "true"
                },
                {
                    "name": "min_start_datetime",
                    "in": "query",
                    "description": "Earliest starting datetime of dataset coverage. ISO 8601-formatted datetime string.",
                    "required": "false",
                    "type": "string",
                    "default": "1980-01-01T00:00:00"
                },
                {
                    "name": "max_start_datetime",
                    "in": "query",
                    "description": "Latest starting datetime of dataset coverage. ISO 8601-formatted datetime string.",
                    "required": "false",
                    "type": "string",
                    "default": "2010-01-01T00:00:00"
                },
                {
                    "name": "min_end_datetime",
                    "in": "query",
                    "description": "Earliest ending datetime of dataset coverage. ISO 8601-formatted datetime string.",
                    "required": "false",
                    "type": "string",
                    "default": "1981-01-01T00:00:00"
                },
                {
                    "name": "max_end_datetime",
                    "in": "query",
                    "description": "Latest ending datetime of dataset coverage. ISO 8601-formatted datetime string.",
                    "required": "false",
                    "type": "string",
                    "default": "2015-01-01T00:00:00"
                }

              ],
              "responses": {
                "200": {
                    "description": "Success"
                }
              }
          }
      }
  }
}
